'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var sdkApi = require('@dynamic-labs/sdk-api');
require('@dynamic-labs/wallet-connector-core');
require('../../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('react/jsx-runtime');
require('../../../context/ViewContext/ViewContext.cjs');
require('react');
require('@dynamic-labs/wallet-book');
require('../../constants/colors.cjs');
require('../../constants/values.cjs');
require('../../../shared/utils/classes/storage/localStorage.cjs');
require('@dynamic-labs/utils');
require('../../../shared/consts/index.cjs');
require('../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
var isProviderEnabled = require('../isProviderEnabled/isProviderEnabled.cjs');
require('viem');
require('viem/chains');
require('../../../config/ApiEndpoint.cjs');

const getEnabledEmbeddedWalletProviders = (projectSettings) => {
    var _a;
    const providers = (_a = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.providers) !== null && _a !== void 0 ? _a : [];
    const embeddedWalletProviders = [
        sdkApi.ProviderEnum.Turnkey,
        sdkApi.ProviderEnum.CoinbaseWaas,
        sdkApi.ProviderEnum.MagicLink,
        sdkApi.ProviderEnum.Blocto,
    ];
    return embeddedWalletProviders.filter((provider) => isProviderEnabled.isProviderEnabled(providers, provider));
};

exports.getEnabledEmbeddedWalletProviders = getEnabledEmbeddedWalletProviders;
