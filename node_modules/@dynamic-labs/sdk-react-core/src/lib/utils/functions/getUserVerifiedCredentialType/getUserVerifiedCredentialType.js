/**
 * This will return a string which we can present to the user credential type
 * @param decodedJwt
 * @returns CredentialType | undefined
 */
const getUserVerifiedCredentialType = (decodedJwt) => {
    var _a;
    const verifiedCredential = (_a = decodedJwt.verifiedCredentials) === null || _a === void 0 ? void 0 : _a.find((credentials) => credentials.id === decodedJwt.lastVerifiedCredentialId);
    if (!(verifiedCredential === null || verifiedCredential === void 0 ? void 0 : verifiedCredential.publicIdentifier)) {
        return;
    }
    if (verifiedCredential === null || verifiedCredential === void 0 ? void 0 : verifiedCredential.email) {
        return 'email';
    }
    if (verifiedCredential === null || verifiedCredential === void 0 ? void 0 : verifiedCredential.phoneNumber) {
        return 'phone';
    }
    return 'wallet';
};

export { getUserVerifiedCredentialType };
