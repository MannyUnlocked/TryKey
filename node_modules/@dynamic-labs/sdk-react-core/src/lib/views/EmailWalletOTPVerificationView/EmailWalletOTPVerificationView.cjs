'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
var dynamicEvents = require('../../events/dynamicEvents.cjs');
require('../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/utils');
require('../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
var ViewContext = require('../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../shared/utils/classes/storage/localStorage.cjs');
require('../../shared/consts/index.cjs');
var useInternalDynamicContext = require('../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.cjs');
require('../../context/CaptchaContext/CaptchaContext.cjs');
require('../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
var shortenEmail = require('../../shared/utils/functions/shortenEmail/shortenEmail.cjs');
require('viem');
require('viem/chains');
require('../../config/ApiEndpoint.cjs');
require('../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../context/WalletContext/WalletContext.cjs');
require('../../context/ThemeContext/ThemeContext.cjs');
var useMutation = require('../../utils/hooks/useMutation/useMutation.cjs');
require('@dynamic-labs/types');
require('yup');
require('react-i18next');
require('../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../context/MockContext/MockContext.cjs');
require('../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../context/UserWalletsContext/UserWalletsContext.cjs');
require('i18next');
require('../../components/ShadowDOM/ShadowDOM.cjs');
require('../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../context/FooterAnimationContext/index.cjs');
require('../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
require('../../context/LoadingContext/LoadingContext.cjs');
require('../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../components/IconButton/IconButton.cjs');
require('../../components/MenuList/Dropdown/Dropdown.cjs');
require('formik');
require('../TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../components/Alert/Alert.cjs');
require('../../components/Input/Input.cjs');
require('../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../context/PasskeyContext/PasskeyContext.cjs');
require('../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var EmailIcon = require('../../components/EmailIcon/EmailIcon.cjs');
require('../../components/InlineWidget/InlineWidget.cjs');
require('../../components/IsBrowser/IsBrowser.cjs');
var OTPVerificationView = require('../../components/OTPVerificationView/OTPVerificationView.cjs');
require('../../components/PhoneNumberField/usePhoneInputLogic/usePhoneInputLogic.cjs');
require('../../components/Popper/Popper/Popper.cjs');
require('../../components/Popper/PopperContext/PopperContext.cjs');
require('qrcode');
require('../WalletList/WalletList.cjs');
require('../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../locale/locale.cjs');

const EmailWalletOTPVerificationView = () => {
    const { setView } = ViewContext.useViewContext();
    const [error, setError] = React.useState();
    const { selectedWalletConnector: emailWalletConnector, clearStatesOnBackClick, } = useInternalDynamicContext.useInternalDynamicContext();
    if (!emailWalletConnector ||
        !walletConnectorCore.isEmailOTPWalletConnector(emailWalletConnector)) {
        throw new Error('Current wallet is not EmailWalletConnector');
    }
    const { email } = emailWalletConnector;
    if (!email) {
        throw new Error('EmailWalletOtpVerificationView requires a email');
    }
    const handleBackClick = () => {
        emailWalletConnector.clearEmail();
        clearStatesOnBackClick();
        setView('login-with-email-or-wallet');
    };
    const { data: isValid, isLoading, mutate: onSubmit, } = useMutation.useMutation((otp) => emailWalletConnector.verifyOneTimePassword(otp), {
        onFailure: (error) => {
            setError(error);
            dynamicEvents.dynamicEvents.emit('emailVerificationResult', false, email);
        },
        onSuccess: () => {
            dynamicEvents.dynamicEvents.emit('emailVerificationResult', true, email);
        },
    });
    return (jsxRuntime.jsx(OTPVerificationView.OTPVerificationView, { MainIcon: EmailIcon.EmailIcon, displayedDestination: shortenEmail.shortenEmail(email), error: error, onClickBack: handleBackClick, isLoading: isLoading, onPinComplete: onSubmit, isValid: isValid === true, retryHandler: emailWalletConnector.retryOneTimePassword.bind(emailWalletConnector), onPinChange: () => setError(undefined), onClickEditDestination: handleBackClick, successBannerTextKey: 'dyn_magic_verification.banner_text' }));
};

exports.EmailWalletOTPVerificationView = EmailWalletOTPVerificationView;
