import { jsxs, jsx } from 'react/jsx-runtime';
import { useState, useCallback } from 'react';
import '../../../../events/dynamicEvents.js';
import '../../../../../../_virtual/_tslib.js';
import '@dynamic-labs/utils';
import '../../../../context/DynamicContext/DynamicContext.js';
import '@dynamic-labs/sdk-api';
import { logger } from '../../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '../../../../utils/constants/colors.js';
import '../../../../utils/constants/values.js';
import '../../../../shared/utils/classes/storage/localStorage.js';
import '../../../../shared/consts/index.js';
import { useInternalDynamicContext } from '../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';
import '../../../../context/CaptchaContext/CaptchaContext.js';
import '../../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import { isPhoneNumberProviderEnabled } from '../../../../utils/functions/isPhoneNumberProviderEnabled/isPhoneNumberProviderEnabled.js';
import { validatePhoneLength } from '../../../../utils/functions/validatePhoneLength/validatePhoneLength.js';
import 'react-international-phone';
import 'viem';
import 'viem/chains';
import '../../../../config/ApiEndpoint.js';
import '../../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../../context/WalletContext/WalletContext.js';
import '../../../../context/ThemeContext/ThemeContext.js';
import '@dynamic-labs/types';
import 'yup';
import 'react-i18next';
import '../../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../../context/MockContext/MockContext.js';
import '../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.js';
import '../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../../context/UserWalletsContext/UserWalletsContext.js';
import 'i18next';
import '../../../../components/ShadowDOM/ShadowDOM.js';
import '../../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';
import '../../../../context/FooterAnimationContext/index.js';
import '../../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import 'react-focus-lock';
import '../../../../context/LoadingContext/LoadingContext.js';
import '../../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';
import '../../../../components/IconButton/IconButton.js';
import '../../../../components/MenuList/Dropdown/Dropdown.js';
import 'formik';
import { Button } from '../../../../components/Button/Button.js';
import '../../../TransactionConfirmationView/helpers/transactionErrorMessage.js';
import '../../../../components/Alert/Alert.js';
import '../../../../components/Input/Input.js';
import '../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../../context/PasskeyContext/PasskeyContext.js';
import '../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';
import { InlineSubmitButton } from '../../../../components/InlineSubmitButton/InlineSubmitButton.js';
import '../../../../components/InlineWidget/InlineWidget.js';
import '../../../../components/IsBrowser/IsBrowser.js';
import { PhoneNumberField } from '../../../../components/PhoneNumberField/PhoneNumberField.js';
import '../../../../components/Popper/Popper/Popper.js';
import '../../../../components/Popper/PopperContext/PopperContext.js';
import 'qrcode';
import '../../../WalletList/WalletList.js';
import '../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import { useSubmitPhoneNumber } from './useSubmitPhoneNumber/useSubmitPhoneNumber.js';

const PhoneNumberSignInSection = ({ isLoading, onSubmit, onSubmitError, }) => {
    var _a, _b;
    const { projectSettings } = useInternalDynamicContext();
    const [invalidNumberMessage, setInvalidNumberMessage] = useState(undefined);
    const [isInputComplete, setIsInputComplete] = useState(false);
    const [phoneData, setPhoneData] = useState({
        country: undefined,
        phone: '',
    });
    const handleUpdate = useCallback((phoneData) => {
        setPhoneData(phoneData);
        setIsInputComplete(validatePhoneLength(phoneData.phone, phoneData.country));
    }, []);
    const [isHovered, setIsHovered] = useState(false);
    const [isFocused, setIsFocused] = useState(false);
    const handleSubmit = useSubmitPhoneNumber({
        country: phoneData.country,
        onSubmit,
        onSubmitError,
        phone: phoneData.phone,
        setInvalidNumberMessage,
    });
    if (!isPhoneNumberProviderEnabled((_a = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.providers) !== null && _a !== void 0 ? _a : [])) {
        logger.error('Failed to render PhoneNumberSignInSection - no sign in provider enabled');
        return null;
    }
    const showBigSubmitButton = !((_b = projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.design.modal) === null || _b === void 0 ? void 0 : _b.emailSubmitButtonInsideInput);
    return (jsxs("form", { className: 'login-with-phone-number-form', onSubmit: (e) => handleSubmit(e), children: [jsx(PhoneNumberField, { onUpdate: handleUpdate, error: invalidNumberMessage, setIsHovered: setIsHovered, setIsFocused: setIsFocused, appendRight: !showBigSubmitButton ? (jsx(InlineSubmitButton, { disabled: isLoading || !isInputComplete, highlighted: isInputComplete, isFocused: isFocused, isHovered: isHovered, className: 'login-with-phone-number-form__fields__inline-submit' })) : undefined }), showBigSubmitButton && (jsx(Button, { dataTestId: 'big-submit-button', buttonClassName: 'login-with-phone-number-form__button', type: 'submit', loading: isLoading, disabled: isLoading || !isInputComplete, buttonVariant: 'brand-primary', buttonPadding: 'login-screen-height', expanded: true, typographyProps: {
                    color: 'inherit',
                }, children: "Continue" }))] }));
};

export { PhoneNumberSignInSection };
