'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var sdkApi = require('@dynamic-labs/sdk-api');

const getWalletsSection = (numOfWalletsToDisplay) => ({
    numOfItemsToDisplay: numOfWalletsToDisplay,
    type: sdkApi.SdkViewSectionType.Wallet,
});
const getSocialsSection = (numOfSocialsToDisplay, defaultItem) => ({
    defaultItem,
    numOfItemsToDisplay: numOfSocialsToDisplay,
    type: sdkApi.SdkViewSectionType.Social,
});
const getSimpleSection = (type) => ({ type });
/**
 * Defines in which order each section shows, and under which conditions
 */
const getLoginViewStructure = ({ socialAboveEmail, showWallets, web3Layout, numOfWalletsToDisplay, showEmail, showPhone, showSocial, splitEmailAndSocial, defaultSocialItem, }) => {
    const joinEmailAndSocial = !splitEmailAndSocial && (showEmail || showPhone);
    const defaultSocial = splitEmailAndSocial ? defaultSocialItem : undefined;
    return [
        // Web 3 layout wallets
        {
            condition: showWallets && web3Layout,
            section: getWalletsSection(numOfWalletsToDisplay),
        },
        // Social before email
        {
            condition: showSocial && socialAboveEmail,
            hideSeparator: joinEmailAndSocial ? 'below' : undefined,
            section: getSocialsSection(5, defaultSocial),
        },
        // Email and/or phone
        {
            condition: showEmail && !showPhone,
            section: getSimpleSection(sdkApi.SdkViewSectionType.Email),
        },
        {
            condition: !showEmail && showPhone,
            section: getSimpleSection(sdkApi.SdkViewSectionType.Phone),
        },
        {
            condition: showEmail && showPhone,
            section: getSimpleSection(sdkApi.SdkViewSectionType.EmailAndPhone),
        },
        // Social after email
        {
            condition: showSocial && !socialAboveEmail,
            hideSeparator: joinEmailAndSocial ? 'above' : undefined,
            section: getSocialsSection(5, defaultSocial),
        },
        // Web 2 layout wallets
        {
            condition: showWallets && !web3Layout,
            section: getWalletsSection(numOfWalletsToDisplay),
        },
    ];
};

exports.getLoginViewStructure = getLoginViewStructure;
