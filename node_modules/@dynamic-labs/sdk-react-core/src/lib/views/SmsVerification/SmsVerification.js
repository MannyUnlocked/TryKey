import { jsx } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import { OTPVerificationView } from '../../components/OTPVerificationView/OTPVerificationView.js';
import { PhoneIcon } from '../../components/PhoneIcon/PhoneIcon.js';
import { useViewContext } from '../../context/ViewContext/ViewContext.js';
import 'react';
import '../../events/dynamicEvents.js';
import '../../../../_virtual/_tslib.js';
import '@dynamic-labs/utils';
import '../../context/DynamicContext/DynamicContext.js';
import '@dynamic-labs/sdk-api';
import '../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '@dynamic-labs/wallet-book';
import '../../utils/constants/colors.js';
import '../../utils/constants/values.js';
import '../../shared/utils/classes/storage/localStorage.js';
import '../../shared/consts/index.js';
import { useInternalDynamicContext } from '../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';
import '../../context/CaptchaContext/CaptchaContext.js';
import '../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import 'viem';
import 'viem/chains';
import '../../config/ApiEndpoint.js';
import '../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../context/AccountExistsContext/AccountExistsContext.js';
import '../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../context/WalletContext/WalletContext.js';
import '../../context/ThemeContext/ThemeContext.js';
import '@dynamic-labs/types';
import 'yup';
import '../../context/FieldsStateContext/FieldsStateContext.js';
import '../../context/MockContext/MockContext.js';
import '../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.js';
import '../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../context/UserWalletsContext/UserWalletsContext.js';
import 'i18next';
import '../../components/ShadowDOM/ShadowDOM.js';
import '../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';
import '../../context/FooterAnimationContext/index.js';
import '../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../context/WalletGroupContext/WalletGroupContext.js';
import '../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import 'react-focus-lock';
import '../../context/LoadingContext/LoadingContext.js';
import '../../widgets/DynamicWidget/context/DynamicWidgetContext.js';
import '../../components/IconButton/IconButton.js';
import '../../components/MenuList/Dropdown/Dropdown.js';
import 'formik';
import '../TransactionConfirmationView/helpers/transactionErrorMessage.js';
import '../../components/Alert/Alert.js';
import '../../components/Input/Input.js';
import '../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../context/PasskeyContext/PasskeyContext.js';
import '../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';
import { TextButton } from '../../components/TextButton/TextButton.js';
import '../../components/InlineWidget/InlineWidget.js';
import '../../components/IsBrowser/IsBrowser.js';
import '../../components/PhoneNumberField/usePhoneInputLogic/usePhoneInputLogic.js';
import '../../components/Popper/Popper/Popper.js';
import '../../components/Popper/PopperContext/PopperContext.js';
import 'qrcode';
import '../WalletList/WalletList.js';
import '../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../locale/locale.js';
import { useSmsVerification } from './useSmsVerification/useSmsVerification.js';

const SmsVerification = () => {
    const { view } = useViewContext();
    const { handleLogOut } = useInternalDynamicContext();
    const { t } = useTranslation();
    const isLoginView = view.type === 'login-with-sms-verification';
    const { error, formattedPhone, isLoading, isValid, onSubmit, retryOneTimePassword, setError, } = useSmsVerification(isLoginView ? 'login' : 'verify-only');
    // TODO: implement the "update-phone-number" by making the EmailUpdate view generic
    // DO NOT just copy EmailUpdate and adjust it for sms. That would generate too much code duplication.
    // Then, uncomment the below code
    // const EditPhone: JSX.Element | undefined = !isLoginView ? (
    //   <TextButton
    //     onClick={() => setView('update-phone-number')}
    //     className='sms-verification__text-button'
    //     disabled={isLoading}
    //     copykey='dyn_otp_verification.phone_number.edit'
    //   >
    //     {t('dyn_otp_verification.phone_number.edit')}
    //   </TextButton>
    // ) : undefined;
    const LogoutButton = !isLoginView ? (jsx(TextButton, { className: 'sms-verification__log-out', onClick: handleLogOut, copykey: 'dyn_otp_verification.log_out_button', children: t('dyn_otp_verification.log_out_button') })) : undefined;
    return (jsx(OTPVerificationView, { MainIcon: PhoneIcon, displayedDestination: formattedPhone, error: error, hideHeader: true, isLoading: isLoading, onPinComplete: onSubmit, isValid: isValid, retryHandler: retryOneTimePassword, onPinChange: () => setError(undefined), 
        // appendAbovePinInput={EditPhone}
        appendToEnd: LogoutButton }));
};

export { SmsVerification };
