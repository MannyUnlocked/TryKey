import { IPhantomRedirectConnector } from '@dynamic-labs/wallet-connector-core';
import { SolWalletConnector } from '../solWalletConnector';
import { ISolana } from '..';
export declare class PhantomRedirect extends SolWalletConnector implements IPhantomRedirectConnector {
    name: string;
    overrideKey: string;
    constructor(props: any);
    getAddress(): Promise<string | undefined>;
    connect(): Promise<void>;
    getSession(): Promise<string>;
    signMessage(messageToSign: string): Promise<string | undefined>;
    extractSignature(): {
        signature: string;
        message: string;
    };
    getSigner(): Promise<ISolana | undefined>;
    getConnectedAccounts(): Promise<string[]>;
    endSession(): Promise<void>;
    /**
     * Helper method to get inputs from query params and localstorage
     *
     * The second argument is used to read values from the query string
     *   e.g. ['data', 'nonce'] -> params.get('data') and params.get('nonce')
     *
     * The third argument is used to read values from local storage
     *   e.g. ['address', 'message'] -> storage.address.get() and storage.message.get()
     *
     * Throws an error if any of the inputs are unable to be found in their respective locations
     */
    private getInputsOrThrow;
}
